{"uid":"1797728e22c2183e","name":"test_google_search","fullName":"tests.test_main.TestPageSearch#test_google_search","historyId":"dc8c3596712c4e4db968f3d10d3ba413","time":{"start":1676144194077,"stop":1676144194077,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x558432a16303 <unknown>\n#1 0x5584327ead37 <unknown>\n#2 0x558432813157 <unknown>\n#3 0x55843280f330 <unknown>\n#4 0x5584328504a6 <unknown>\n#5 0x558432847753 <unknown>\n#6 0x55843281aa14 <unknown>\n#7 0x55843281bb7e <unknown>\n#8 0x558432a6532e <unknown>\n#9 0x558432a68c0e <unknown>\n#10 0x558432a4b610 <unknown>\n#11 0x558432a69c23 <unknown>\n#12 0x558432a3d545 <unknown>\n#13 0x558432a8a6a8 <unknown>\n#14 0x558432a8a836 <unknown>\n#15 0x558432aa5d13 <unknown>\n#16 0x7f38ef039b43 <unknown>","statusTrace":"self = <test_main.TestPageSearch object at 0x7f1e333cf280>\n\n    def setup(self):\n>       self.driver = webdriver.Chrome()\n\ntests/test_main.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:80: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py:104: in __init__\n    super().__init__(\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:286: in __init__\n    self.start_session(capabilities, browser_profile)\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:378: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1e333cee00>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Chrome failed to start: exited a...\\\\n#14 0x558432a8a836 \\\\u003Cunknown>\\\\n#15 0x558432aa5d13 \\\\u003Cunknown>\\\\n#16 0x7f38ef039b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nE       Stacktrace:\nE       #0 0x558432a16303 <unknown>\nE       #1 0x5584327ead37 <unknown>\nE       #2 0x558432813157 <unknown>\nE       #3 0x55843280f330 <unknown>\nE       #4 0x5584328504a6 <unknown>\nE       #5 0x558432847753 <unknown>\nE       #6 0x55843281aa14 <unknown>\nE       #7 0x55843281bb7e <unknown>\nE       #8 0x558432a6532e <unknown>\nE       #9 0x558432a68c0e <unknown>\nE       #10 0x558432a4b610 <unknown>\nE       #11 0x558432a69c23 <unknown>\nE       #12 0x558432a3d545 <unknown>\nE       #13 0x558432a8a6a8 <unknown>\nE       #14 0x558432a8a836 <unknown>\nE       #15 0x558432aa5d13 <unknown>\nE       #16 0x7f38ef039b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestPageSearch","time":{"start":1676144194078,"stop":1676144196207,"duration":2129},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x558432a16303 <unknown>\n#1 0x5584327ead37 <unknown>\n#2 0x558432813157 <unknown>\n#3 0x55843280f330 <unknown>\n#4 0x5584328504a6 <unknown>\n#5 0x558432847753 <unknown>\n#6 0x55843281aa14 <unknown>\n#7 0x55843281bb7e <unknown>\n#8 0x558432a6532e <unknown>\n#9 0x558432a68c0e <unknown>\n#10 0x558432a4b610 <unknown>\n#11 0x558432a69c23 <unknown>\n#12 0x558432a3d545 <unknown>\n#13 0x558432a8a6a8 <unknown>\n#14 0x558432a8a836 <unknown>\n#15 0x558432aa5d13 <unknown>\n#16 0x7f38ef039b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1111, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 883, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/_pytest/python.py\", line 893, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/_pytest/python.py\", line 778, in _call_with_optional_argument\n    func()\n  File \"/home/runner/work/pythonProject5/pythonProject5/tests/test_main.py\", line 8, in setup\n    self.driver = webdriver.Chrome()\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 80, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 104, in __init__\n    super().__init__(\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 286, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 378, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[],"labels":[{"name":"feature","value":"Open pages"},{"name":"story","value":"Открывает страницу \"google.com\""},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main"},{"name":"subSuite","value":"TestPageSearch"},{"name":"host","value":"fv-az306-290"},{"name":"thread","value":"2226-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"2c7e0bf82152587c","reportUrl":"https://Yuriyvas.github.io/pythonProject5/5//#testresult/2c7e0bf82152587c","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x561b15f80303 <unknown>\n#1 0x561b15d54d37 <unknown>\n#2 0x561b15d7d157 <unknown>\n#3 0x561b15d79330 <unknown>\n#4 0x561b15dba4a6 <unknown>\n#5 0x561b15db1753 <unknown>\n#6 0x561b15d84a14 <unknown>\n#7 0x561b15d85b7e <unknown>\n#8 0x561b15fcf32e <unknown>\n#9 0x561b15fd2c0e <unknown>\n#10 0x561b15fb5610 <unknown>\n#11 0x561b15fd3c23 <unknown>\n#12 0x561b15fa7545 <unknown>\n#13 0x561b15ff46a8 <unknown>\n#14 0x561b15ff4836 <unknown>\n#15 0x561b1600fd13 <unknown>\n#16 0x7f7fa1ec6b43 <unknown>","time":{"start":1676143934216,"stop":1676143934216,"duration":0}}]},"tags":[]},"source":"1797728e22c2183e.json","parameterValues":[]}